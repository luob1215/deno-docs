"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[835],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>h});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=l(t),d=r,h=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return t?a.createElement(h,s(s({ref:n},m),{},{components:t})):a.createElement(h,s({ref:n},m))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},11592:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=t(87462),r=(t(67294),t(3905));const o={},s="npm via CDNs",i={unversionedId:"manual/node/cdns",id:"manual/node/cdns",title:"npm via CDNs",description:"Most developers currently use npm modules in Deno by importing them using one of",source:"@site/runtime/manual/node/cdns.md",sourceDirName:"manual/node",slug:"/manual/node/cdns",permalink:"/deno-docs/runtime/manual/node/cdns",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"package.json compatibility",permalink:"/deno-docs/runtime/manual/node/package_json"},next:{title:"Frequently Asked Questions",permalink:"/deno-docs/runtime/manual/node/faqs"}},p={},l=[{value:"esm.sh",id:"esmsh",level:3},{value:"UNPKG",id:"unpkg",level:3},{value:"JSPM",id:"jspm",level:3}],m={toc:l},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"npm-via-cdns"},"npm via CDNs"),(0,r.kt)("p",null,"Most developers currently use npm modules in Deno by importing them using one of\nmany CDNs. You can reference the CDN URL in your Deno code or directly in your\nbrowser as an ES Module. These CDN URLs are reusable - they also provide\ninstructions on how to be used in Deno, the browser, etc."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Starting with Deno release 1.28"),", Deno also offers stabilized support for\n",(0,r.kt)("a",{parentName:"p",href:"/deno-docs/runtime/manual/node/npm_specifiers"},(0,r.kt)("inlineCode",{parentName:"a"},"npm:")," specifiers"),", which are a new way of using npm\nmodules in Deno."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Starting with Deno release 1.31"),", Deno supports resolving npm dependencies\n",(0,r.kt)("a",{parentName:"p",href:"/deno-docs/runtime/manual/node/package_json"},"from package.json")," if it exists."),(0,r.kt)("h3",{id:"esmsh"},"esm.sh"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://esm.sh/"},"esm.sh")," is a CDN that was specifically designed for Deno,\nthough addressing the concerns for Deno also makes it a general purpose CDN for\naccessing npm packages as ES Module bundles. esm.sh uses\n",(0,r.kt)("a",{parentName:"p",href:"https://esbuild.github.io/"},"esbuild")," to take an arbitrary npm package and\nensure that it is consumable as an ES Module. In many cases you can just import\nthe npm package into your Deno application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "https://esm.sh/react";\n\nexport default class A extends React.Component {\n  render() {\n    return <div></div>;\n  }\n}\n')),(0,r.kt)("p",null,"esm.sh supports the use of both specific versions of packages, as well as\n",(0,r.kt)("a",{parentName:"p",href:"https://semver.npmjs.com/"},"semver")," versions of packages, so you can express\nyour dependency in a similar way you would in a ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," file when you\nimport it. For example, to get a specific version of a package:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "https://esm.sh/react@17.0.2";\n')),(0,r.kt)("p",null,"Or to get the latest patch release of a minor release:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "https://esm.sh/react@~16.13.0";\n')),(0,r.kt)("p",null,"Or to get a submodule:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { renderToString } from "https://esm.sh/react-dom/server";\n')),(0,r.kt)("p",null,"Or to import regular files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx,",metastring:"ignore",ignore:!0},'import "https://esm.sh/tailwindcss/dist/tailwind.min.css";\n')),(0,r.kt)("p",null,"esm.sh also automatically sets a header which Deno recognizes that allows Deno\nto be able to retrieve type definitions for the package/module. See\n",(0,r.kt)("a",{parentName:"p",href:"/deno-docs/runtime/manual/advanced/typescript/types"},"Using ",(0,r.kt)("inlineCode",{parentName:"a"},"X-TypeScript-Types")," header"),". in this\nmanual for more details on how this works."),(0,r.kt)("p",null,"esm.sh also provides information on\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ije/esm.sh/blob/main/HOSTING.md"},"self hosting the CDN"),"."),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"https://esm.sh/"},"esm.sh homepage")," for more detailed information\non how the CDN can be used and what features it has."),(0,r.kt)("h3",{id:"unpkg"},"UNPKG"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://unpkg.com/"},"UNPKG")," is the most well known CDN for npm packages. For\npackages that include an ES Module distribution for things like the browsers,\nmany of them can be used directly off of UNPKG. That being said, everything\navailable on UNPKG is available on more Deno friendly CDNs."),(0,r.kt)("h3",{id:"jspm"},"JSPM"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://jspm.io"},"jspm.io")," CDN is specifically designed to provide npm and\nother registry packages as ES Modules in a way that works well with import maps.\nWhile it doesn't currently cater to Deno, the fact that Deno can utilize import\nmaps, allows you to use the ",(0,r.kt)("a",{parentName:"p",href:"https://generator.jspm.io/"},"JSPM.io generator")," to\ngenerate an import-map of all the packages you want to use and have them served\nup from the CDN."))}u.isMDXComponent=!0}}]);