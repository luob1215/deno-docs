"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[437],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),d=o,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},23429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const a={},i="Deno namespace APIs",l={unversionedId:"manual/runtime/builtin_apis",id:"manual/runtime/builtin_apis",title:"Deno namespace APIs",description:"The global Deno namespace contains APIs that are not web standard, including",source:"@site/runtime/manual/runtime/builtin_apis.md",sourceDirName:"manual/runtime",slug:"/manual/runtime/builtin_apis",permalink:"/deno-docs/runtime/manual/runtime/builtin_apis",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"Cross-runtime modules with dnt",permalink:"/deno-docs/runtime/manual/advanced/publishing/dnt"},next:{title:"HTTP Server APIs",permalink:"/deno-docs/runtime/manual/runtime/http_server_apis"}},s={},u=[{value:"Errors",id:"errors",level:2},{value:"File System",id:"file-system",level:2},{value:"I/O",id:"io",level:2},{value:"Network",id:"network",level:2},{value:"Sub Process",id:"sub-process",level:2}],p={toc:u},c="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deno-namespace-apis"},"Deno namespace APIs"),(0,o.kt)("p",null,"The global Deno namespace contains APIs that are not web standard, including\nAPIs for reading from files, opening TCP sockets, serving HTTP, and executing\nsubprocesses, etc."),(0,o.kt)("p",null,"For a full list of Deno Built-in APIs, see the\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api?s=Deno"},"reference"),". Below we highlight some of the most\nimportant."),(0,o.kt)("h2",{id:"errors"},"Errors"),(0,o.kt)("p",null,"The Deno runtime comes with ",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api#Errors"},"20 error classes"),"\nthat can be raised in response to a number of conditions."),(0,o.kt)("p",null,"Some examples are:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Deno.errors.NotFound;\nDeno.errors.WriteZero;\n")),(0,o.kt)("p",null,"They can be used as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'try {\n  const file = await Deno.open("./some/file.txt");\n} catch (error) {\n  if (error instanceof Deno.errors.NotFound) {\n    console.error("the file was not found");\n  } else {\n    // otherwise re-throw\n    throw error;\n  }\n}\n')),(0,o.kt)("h2",{id:"file-system"},"File System"),(0,o.kt)("p",null,"The Deno runtime comes with\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api#File_System"},"various functions for working with files and directories"),".\nYou will need to use --allow-read and --allow-write permissions to gain access\nto the file system."),(0,o.kt)("p",null,"Refer to the links below for code examples of how to use the file system\nfunctions."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://examples.deno.land/reading-files"},"Reading files in several different ways")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deno-docs/runtime/tutorials/file_server"},"Reading files in streams")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deno-docs/runtime/tutorials/read_write_files#reading-a-text-file"},"Reading a text file (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.readTextFile"),")")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deno-docs/runtime/tutorials/read_write_files#writing-a-text-file"},"Writing a text file (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.writeTextFile"),")"))),(0,o.kt)("h2",{id:"io"},"I/O"),(0,o.kt)("p",null,"The Deno runtime comes with\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api#I/O"},"built-in functions for working with resources and I/O"),"."),(0,o.kt)("p",null,"Refer to the links below for code examples for common functions."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.close"},"Closing resources (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.close"),")")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.seek"},"Seeking a certain position within the resource (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.seek"),")"))),(0,o.kt)("h2",{id:"network"},"Network"),(0,o.kt)("p",null,"The Deno runtime comes with\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api#Network"},"built-in functions for dealing with connections to network ports"),"."),(0,o.kt)("p",null,"Refer to the links below for code examples for common functions."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.connect"},"Connect to the hostname and port (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.connect"),")")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://doc.deno.land/deno/stable/~/Deno.listen"},"Announcing on the local transport address (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.listen"),")"))),(0,o.kt)("h2",{id:"sub-process"},"Sub Process"),(0,o.kt)("p",null,"The Deno runtime comes with\n",(0,o.kt)("a",{parentName:"p",href:"https://deno.land/api#Sub_Process"},"built-in functions for spinning up subprocesses"),"."),(0,o.kt)("p",null,"Refer to the links below for code samples of how to create a subprocess."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deno-docs/runtime/tutorials/subprocess"},"Creating a subprocess (",(0,o.kt)("inlineCode",{parentName:"a"},"Deno.Command"),")"))))}m.isMDXComponent=!0}}]);