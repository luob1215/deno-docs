"use strict";(self.webpackChunkdeno_docs=self.webpackChunkdeno_docs||[]).push([[2641],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},75022:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={},i="package.json compatibility",l={unversionedId:"manual/node/package_json",id:"manual/node/package_json",title:"package.json compatibility",description:"Deno supports resolving dependencies based on a package.json file in the",source:"@site/runtime/manual/node/package_json.md",sourceDirName:"manual/node",slug:"/manual/node/package_json",permalink:"/deno-docs/runtime/manual/node/package_json",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"runtimeGuideHome",previous:{title:"node: specifiers",permalink:"/deno-docs/runtime/manual/node/node_specifiers"},next:{title:"npm via CDNs",permalink:"/deno-docs/runtime/manual/node/cdns"}},s={},c=[],p={toc:c},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"packagejson-compatibility"},"package.json compatibility"),(0,a.kt)("p",null,"Deno supports resolving dependencies based on a ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file in the\ncurrent or ancestor directories. This is similar to how Node.js resolves\ndependencies. We recommend using import maps with ",(0,a.kt)("inlineCode",{parentName:"p"},"deno.json")," which is explained\n",(0,a.kt)("a",{parentName:"p",href:"/deno-docs/runtime/manual/basics/import_maps"},"here"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "name": "@deno/my-example-project",\n  "description": "An example app created with Deno",\n  "type": "module",\n  "scripts": {\n    "dev": "deno run --allow-env --allow-sys main.ts"\n  },\n  "dependencies": {\n    "chalk": "^5.2"\n  }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="main.ts"',title:'"main.ts"'},'import chalk from "chalk";\n\nconsole.log(chalk.green("Hello from Deno!"));\n')),(0,a.kt)("p",null,"Then we can run this script:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"> deno run --allow-env --allow-sys main.ts\nHello from Deno!\n")),(0,a.kt)("p",null,"Or also execute package.json scripts via ",(0,a.kt)("inlineCode",{parentName:"p"},"deno task"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"> deno task dev\nHello from Deno!\n")))}u.isMDXComponent=!0}}]);